package com.singleton.type7;

//静态内部类（没有问题，推荐使用）
public class SingletonTest07 {
	public static void main(String[] args) {
		Singleton instance1 = Singleton.getInstance();
		Singleton instance2 = Singleton.getInstance();
		System.out.println(instance1 == instance2);
		System.out.println("instance1: " + instance1.hashCode());
		System.out.println("instance2: " + instance2.hashCode());
	}
}

class Singleton {

	private static volatile Singleton instance;

	private Singleton() {
	}
	//静态内部类不会在刚开始就马上装载
	//当被调用的时候才会装载
	private static class SingletonInstance{
		private static final Singleton INSTANCE = new Singleton();
	}
	
	public static Singleton getInstance() {
		return SingletonInstance.INSTANCE;
	}

}